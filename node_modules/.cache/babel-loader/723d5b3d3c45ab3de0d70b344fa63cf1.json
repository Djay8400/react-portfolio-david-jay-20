{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UTSA Coding Bootcamp\\\\bootcamp-repos\\\\Homework\\\\react-portfolio-david-jay-20\\\\src\\\\components\\\\PageSetter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navigation from \"./Navigation\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Contact from \"./pages/Contact\";\nimport Resume from \"./pages/Resume\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageSetter() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(\"About\"); // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n\n  const renderPage = () => {\n    if (currentPage === \"About\") {\n      return /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (currentPage === \"Portfolio\") {\n      return /*#__PURE__*/_jsxDEV(Portfolio, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (currentPage === \"Contact\") {\n      return /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Resume, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  };\n\n  const handlePageChange = page => setCurrentPage(page);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      currentPage: currentPage,\n      handlePageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), renderPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PageSetter, \"Opv7alb6lNoTE9K5R8Y8uPPReyY=\");\n\n_c = PageSetter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSetter\");","map":{"version":3,"sources":["C:/Users/UTSA Coding Bootcamp/bootcamp-repos/Homework/react-portfolio-david-jay-20/src/components/PageSetter.js"],"names":["React","useState","Navigation","About","Portfolio","Contact","Resume","PageSetter","currentPage","setCurrentPage","renderPage","handlePageChange","page"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,OAAD,CAA9C,CADmC,CAGnC;;AACA,QAAMS,UAAU,GAAG,MAAM;AACvB,QAAIF,WAAW,KAAK,OAApB,EAA6B;AAC3B,0BAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAIA,WAAW,KAAK,WAApB,EAAiC;AAC/B,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,QAAIA,WAAW,KAAK,SAApB,EAA+B;AAC7B,0BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAXD;;AAaA,QAAMG,gBAAgB,GAAIC,IAAD,IAAUH,cAAc,CAACG,IAAD,CAAjD;;AAEA,sBACE;AAAA,4BAEE,QAAC,UAAD;AACE,MAAA,WAAW,EAAEJ,WADf;AAEE,MAAA,gBAAgB,EAAEG;AAFpB;AAAA;AAAA;AAAA;AAAA,YAFF,EAOGD,UAAU,EAPb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9BuBH,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport About from \"./pages/About\";\r\nimport Portfolio from \"./pages/Portfolio\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Resume from \"./pages/Resume\";\r\n\r\nexport default function PageSetter() {\r\n  const [currentPage, setCurrentPage] = useState(\"About\");\r\n\r\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\r\n  const renderPage = () => {\r\n    if (currentPage === \"About\") {\r\n      return <About />;\r\n    }\r\n    if (currentPage === \"Portfolio\") {\r\n      return <Portfolio />;\r\n    }\r\n    if (currentPage === \"Contact\") {\r\n      return <Contact />;\r\n    }\r\n    return <Resume />;\r\n  };\r\n\r\n  const handlePageChange = (page) => setCurrentPage(page);\r\n\r\n  return (\r\n    <div>\r\n      {/* We are passing the currentPage from state and the function to update it */}\r\n      <Navigation\r\n        currentPage={currentPage}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n      {/* Here we are calling the renderPage method which will return a component  */}\r\n      {renderPage()}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}